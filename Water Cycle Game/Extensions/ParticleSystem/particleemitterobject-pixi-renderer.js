var gdjs;(function(m){const l=GlobalPIXIModule.PIXI;class a{constructor(t,i,e){this.started=!1;let s=null;const r=new l.Graphics;if(r.lineStyle(0,0,0),r.beginFill(m.rgbToHexNumber(255,255,255),1),e.rendererType==="Point")r.drawCircle(0,0,e.rendererParam1);else if(e.rendererType==="Line")r.drawRect(0,0,e.rendererParam1,e.rendererParam2),r.beginFill(m.rgbToHexNumber(255,255,255),.001),r.drawRect(0,0,e.rendererParam1,e.rendererParam2);else if(e.textureParticleName){const o=new l.Sprite(t.getGame().getImageManager().getPIXITexture(e.textureParticleName));o.width=e.rendererParam1,o.height=e.rendererParam2,r.addChild(o)}else r.drawRect(0,0,e.rendererParam1,e.rendererParam2);r.endFill(),s=t.getGame().getRenderer().getPIXIRenderer().generateTexture(r);const n={color:{list:[{value:m.rgbToHexNumber(e.particleRed1,e.particleGreen1,e.particleBlue1).toString(16),time:0},{value:m.rgbToHexNumber(e.particleRed2,e.particleGreen2,e.particleBlue2).toString(16),time:1}],isStepped:!1},acceleration:{x:e.particleGravityX,y:e.particleGravityY},lifetime:{min:e.particleLifeTimeMin,max:e.particleLifeTimeMax},frequency:e.flow<0?1e-4:1/e.flow,spawnChance:1,particlesPerWave:e.flow<0?e.maxParticleNb:1,maxParticles:e.maxParticleNb,emitterLifetime:a.computeLifetime(e.flow,e.tank),pos:{x:0,y:0},addAtBack:!1,spawnType:"circle",spawnCircle:{x:0,y:0,r:e.zoneRadius}};n.speed={list:[{time:0,value:e.emitterForceMax}],minimumSpeedMultiplier:e.emitterForceMax!==0?e.emitterForceMin/e.emitterForceMax:1,isStepped:!1},n.alpha={list:[{time:0,value:e.particleAlpha1/255},{time:1,value:e.particleAlpha2/255}],isStepped:!1};let g=e.particleSize1/100,x=e.particleSize2/100;const p=e.particleSizeRandomness1/100,d=e.particleSizeRandomness2/100,v=d!==0?(1+p)/(1+d):1;n.scale={list:[{time:0,value:g*(1+p)},{time:1,value:x*(1+d)}],minimumScaleMultiplier:v,isStepped:!1},n.startRotation={min:-e.emitterAngleB/2,max:e.emitterAngleB/2},n.rotationSpeed={min:e.particleAngle1,max:e.particleAngle2},n.blendMode=e.additive?"ADD":"NORMAL",this.renderer=new l.Container,this.emitter=new l.particles.Emitter(this.renderer,s,n),this.start();const h=t.getLayer(i.getLayer());h&&h.getRenderer().addRendererObject(this.renderer,i.getZOrder())}getRendererObject(){return this.renderer}update(t){this.emitter.update(t),!this.started&&this.getParticleCount()>0&&(this.started=!0)}setPosition(t,i){this.emitter.spawnPos.x=t,this.emitter.spawnPos.y=i}setAngle(t,i){this.emitter.minStartRotation=t,this.emitter.maxStartRotation=i}setForce(t,i){const e=i||1e-6;this.emitter.startSpeed.value=e,this.emitter.minimumSpeedMultiplier=t/e}setZoneRadius(t){this.emitter.spawnCircle.radius=t}setLifeTime(t,i){this.emitter.minLifetime=t,this.emitter.maxLifetime=i}setGravity(t,i){this.emitter.acceleration.x=t,this.emitter.acceleration.y=i}setColor(t,i,e,s,r,u){this.emitter.startColor.value.r=t,this.emitter.startColor.value.g=i,this.emitter.startColor.value.b=e,this.emitter.startColor.next=this.emitter.startColor.next||{time:1,value:{}},this.emitter.startColor.next.value.r=s,this.emitter.startColor.next.value.g=r,this.emitter.startColor.next.value.b=u}setSize(t,i){this.emitter.startScale.value=t/100,this.emitter.startScale.next&&(this.emitter.startScale.next.value=i/100)}setParticleRotationSpeed(t,i){this.emitter.minRotationSpeed=t,this.emitter.maxRotationSpeed=i}setMaxParticlesCount(t){this.emitter.maxParticles=t}setAdditiveRendering(t){this.emitter.particleBlendMode=t?l.BLEND_MODES.ADD:l.BLEND_MODES.NORMAL}setAlpha(t,i){this.emitter.startAlpha.value=t/255,this.emitter.startAlpha.next&&(this.emitter.startAlpha.next.value=i/255)}setFlow(t,i){this.emitter.frequency=t<0?1e-4:1/t,this.emitter.emitterLifetime=a.computeLifetime(t,i)}resetEmission(t,i){this.setFlow(t,i);const e=this.emitter.emit;this.start(),e||this.stop()}isTextureNameValid(t,i){const e=i.getGame().getImageManager().getInvalidPIXITexture(),s=i.getGame().getImageManager().getPIXITexture(t);return s.valid&&s!==e}setTextureName(t,i){const e=i.getGame().getImageManager().getInvalidPIXITexture(),s=i.getGame().getImageManager().getPIXITexture(t);s.valid&&s!==e&&(this.emitter.particleImages[0]=s)}getParticleCount(){return this.emitter.particleCount}stop(){this.emitter.emit=!1}start(){this.emitter.emit=!0}recreate(){this.emitter.cleanup()}destroy(){this.emitter.destroy()}hasStarted(){return this.started}static computeLifetime(t,i){return i<0?-1:t<0?.001:(i+.1)/t}}m.ParticleEmitterObjectPixiRenderer=a,m.ParticleEmitterObjectRenderer=a})(gdjs||(gdjs={}));
//# sourceMappingURL=particleemitterobject-pixi-renderer.js.map
